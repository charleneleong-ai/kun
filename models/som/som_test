{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"som_test","version":"0.3.2","provenance":[],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"n7K9ZPWbQrdF","colab_type":"code","outputId":"7e3a69ef-c6d8-438a-c5cc-b1537ad833f8","executionInfo":{"status":"ok","timestamp":1568337019877,"user_tz":-720,"elapsed":1737,"user":{"displayName":"Charlene Leong","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mCCobfWuUHGz_KfndH3u42ayDsU16zUI8a0Qi_7Vg=s64","userId":"01954618043205336001"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["import warnings\n","warnings.filterwarnings('ignore')\n","import sys\n","import os\n","\n","# Mount Drive\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","PATH = os.path.abspath(os.path.join('drive', 'My Drive', 'engr489-2019', 'kun', 'models'))\n","sys.path.append(PATH)\n","sys.path.append(PATH+'/..')\n","\n","OUTPUT_DIR = PATH+'/output/train_ae_8_2019.05.09-16:06:10_output'\n","print(OUTPUT_DIR)\n"],"execution_count":11,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","/content/drive/My Drive/engr489-2019/kun/models/output/train_ae_8_2019.05.09-16:06:10_output\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Ys5Ar9RvdmmT","colab_type":"text"},"source":["### Loading the dataset and model"]},{"cell_type":"code","metadata":{"id":"Oxz1hRu1SDDE","colab_type":"code","outputId":"cb1fe904-182f-4e79-a677-de0a86a93585","executionInfo":{"status":"ok","timestamp":1568337142089,"user_tz":-720,"elapsed":5219,"user":{"displayName":"Charlene Leong","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mCCobfWuUHGz_KfndH3u42ayDsU16zUI8a0Qi_7Vg=s64","userId":"01954618043205336001"}},"colab":{"base_uri":"https://localhost:8080/","height":187}},"source":["\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from mpl_toolkits.mplot3d import Axes3D\n","!pip install somoclu\n","import somoclu\n","\n","import torch\n","from torchvision.utils import save_image, make_grid\n","from torch.utils.tensorboard import SummaryWriter\n","\n","from ae import AutoEncoder\n","from utils.datasets import FilteredMNIST\n","\n","SEED = 489\n","torch.manual_seed(SEED)    # reproducible\n","np.random.seed(SEED)"],"execution_count":17,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: somoclu in /usr/local/lib/python3.6/dist-packages (1.7.5)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.6/dist-packages (from somoclu) (1.3.1)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from somoclu) (1.16.5)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.6/dist-packages (from somoclu) (3.0.3)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->somoclu) (1.1.0)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->somoclu) (2.4.2)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from matplotlib->somoclu) (0.10.0)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->somoclu) (2.5.3)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from kiwisolver>=1.0.1->matplotlib->somoclu) (41.2.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from cycler>=0.10->matplotlib->somoclu) (1.12.0)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_QTkjT5nKzUv","colab_type":"code","colab":{}},"source":["def load_model(model):\n","    if model == 'ae':\n","        ae = AutoEncoder()  \n","        \n","    dataset = FilteredMNIST(output_dir=OUTPUT_DIR)\n","    model_path = ae.load_model(output_dir=OUTPUT_DIR)\n","    # dataset.test += dataset.train   # Get all the data, eval_model loads dataset.test\n","    _, feat, labels, imgs = ae.eval_model(dataset=dataset, output_dir=OUTPUT_DIR)\n","    \n","    return ae, feat, labels, imgs\n","    \n","def tsne(feat, dim):\n","    tsne = TSNE(perplexity=30, n_components=dim, init='pca', n_iter=1000, random_state=SEED)\n","    feat = tsne.fit_transform(feat)\n","    return feat"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"a6prUswMLEFh","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":612},"outputId":"832dfd5a-2dc9-47a6-a81c-224ff1e63fd5","executionInfo":{"status":"ok","timestamp":1568337134133,"user_tz":-720,"elapsed":14571,"user":{"displayName":"Charlene Leong","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mCCobfWuUHGz_KfndH3u42ayDsU16zUI8a0Qi_7Vg=s64","userId":"01954618043205336001"}}},"source":["from sklearn.manifold import TSNE\n","from sklearn.preprocessing import MinMaxScaler\n","\n","ae, feat_ae, labels, imgs = load_model('ae')\n","feat = tsne(feat_ae, 2)\n","feat = MinMaxScaler().fit_transform(feat) "],"execution_count":16,"outputs":[{"output_type":"stream","text":["\n","Loaded filtered_mnist.pt from content\n","\n","Loading model...\n","AutoEncoder(\n","  (encoder): Sequential(\n","    (0): Linear(in_features=784, out_features=500, bias=True)\n","    (1): ReLU(inplace)\n","    (2): Linear(in_features=500, out_features=500, bias=True)\n","    (3): ReLU(inplace)\n","    (4): Linear(in_features=500, out_features=2000, bias=True)\n","    (5): ReLU(inplace)\n","    (6): Linear(in_features=2000, out_features=10, bias=True)\n","  )\n","  (decoder): Sequential(\n","    (0): Linear(in_features=10, out_features=2000, bias=True)\n","    (1): ReLU(inplace)\n","    (2): Linear(in_features=2000, out_features=500, bias=True)\n","    (3): ReLU(inplace)\n","    (4): Linear(in_features=500, out_features=500, bias=True)\n","    (5): ReLU(inplace)\n","    (6): Linear(in_features=500, out_features=784, bias=True)\n","    (7): Sigmoid()\n","  )\n","  (loss_fn): BCELoss()\n",")\n","\n","Loaded model\ttrain_ae_8_2019.05.09-16:06:10.pth\n","\n","Batch size: 128 LR: 0.001 Optimiser: Adam\n","\n","Epoch: 34\tLoss: 0.10972483456134796\n","\n","====> Test set loss: 0.1190\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"k8aRaJBzLJH5","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}